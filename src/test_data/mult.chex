0000 | 59800 | 01011001100000000000 | CONST R6 #0 ; R6 <- 0 Both P or Both N 
0001 | 99080 | 10011001000010000000 | CHKH R4 ; R2 zp 
0002 | 08005 | 00001000000000000101 | BRz LBL_R3 ; if r2 is 0 or pos then branch 
0003 | A0840 | 10100000100001000000 | TCS R2 R2 ; R2 is negative so invert 
0004 | 994A0 | 10011001010010100000 | CHKH R5 ; is R3 0 or pos 
0005 | 08005 | 00001000000000000101 | BRz LBL_R2N ; if R3 is 0 then branch 
0006 | A0C60 | 10100000110001100000 | TCS R3 R3 ; R3 is negative so invert 
0007 | 10004 | 00010000000000000100 | BRzp LBL_MULT ; flipped both so can go straight to mult 
0008 | 994A0 | 10011001010010100000 | CHKH R5 ; R2 is 0 or pos need to check R3 
0009 | 08002 | 00001000000000000010 | BRz LBL_MULT ; if r3 is also 0 or pos 
000a | A0C60 | 10100000110001100000 | TCS R3 R3 ; r3 is negative so invert 
000b | 59801 | 01011001100000000001 | CONST R6 #1 ; need to set flag to invert at the end only one was neg 
000c | 580FF | 01011000000011111111 | CONST R0 #255 
000d | 38001 | 00111000000000000001 | ADD R0 R0 #1 ; N = 256 
000e | 38420 | 00111000010000100000 | ADD R1 R1 #0 
000f | 38840 | 00111000100001000000 | ADD R2 R2 #0 
0010 | 58400 | 01011000010000000000 | CONST R1 #0 ; A = 0; 
0011 | 59000 | 01011001000000000000 | CONST R4 #0 
0012 | 80840 | 10000000100001000000 | CHKL R2 ; Check lowest bit of Q 
0013 | 08002 | 00001000000000000010 | BRz LBL_F ; Yes/No 
0014 | 28423 | 00101000010000100011 | ADD R1 R1 R3 ; A <- A + B 
0015 | B9000 | 10111001000000000000 | GCAR R4 
0016 | 78822 | 01111000100000100010 | SDRL R2 R1 R2 ; Shift A_Q right 
0017 | 78481 | 01111000010010000001 | SDRL R1 R4 R1 ; Shift A_Q right 
0018 | 3801F | 00111000000000011111 | ADD R0 R0 #-1 ; N <- N - 1 
0019 | 181F7 | 00011000000111110111 | BRnp CHECK_SR ; N == 0? 
001a | 998C0 | 10011001100011000000 | CHKH R6 ; is R0 0 or 1 
001b | 08002 | 00001000000000000010 | BRz LBL_END_MULT 
001c | A0840 | 10100000100001000000 | TCS R2 ; R2 is low bits 
001d | A8420 | 10101000010000100000 | TCDH R1 ; R1 is high bits 
001e | 88000 | 10001000000000000000 | DONE ; Return 
